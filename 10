/*Napisati program kojim se
a) Iz datoteke čitaju riječi i spremaju u vezanu listu na način da se riječi slažu po abecednom redu
obrnutom od abecednog reda.Zatim ispisati tu vezanu listu.
b) Iz generirane liste ispisati samo one riječi koje se nalaze zapisane u drugoj proizvoljnoj datoteci. */


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFFER 1024
#define GRESKAALOKACIJE -1
#define NEPOSTOJI -2

struct _lista;
typedef struct _lista* Position;
typedef struct _lista
{
	char* rijec;
	Position next;

}Lista;

int CitajIzDat(Position);
int UpisUListu(Position, char*);
void IspisListe(Position);
int CitajIzDrugeDat(Position);
int Ispisi2(Position, char*);

int main()
{
	Lista l1;
	l1.next = NULL;
	int succ;
	succ = CitajIzDat(&l1);
	if (succ == GRESKAALOKACIJE || succ == NEPOSTOJI)
		return succ;

	IspisListe(l1.next);
	succ = CitajIzDrugeDat(&l1);

	return 0;
}

int CitajIzDat(Position p)
{
	char* filename=NULL;
	FILE* fp=NULL;
	char* rijec=NULL;
	int succ = 0;

	filename = (char*)malloc(BUFFER * sizeof(char));
	if (filename == NULL)
		return GRESKAALOKACIJE;

	rijec = (char*)malloc(BUFFER * sizeof(char));
	if (rijec == NULL)
		return GRESKAALOKACIJE;

	printf("Unesite ime prve datoteke:\n");
	scanf("%s", filename);
	strcat(filename, ".txt");

	fp = fopen(filename, "r");
	if (fp == NULL)
		return NEPOSTOJI;

	while (!feof(fp))
	{
		fscanf(fp, "%s ", rijec);
		int succ = UpisUListu(p, rijec);
		if (succ == GRESKAALOKACIJE)
			return succ;
	}
	fclose(fp);
	return 0;
}
int UpisUListu(Position p, char* rijec)
{   
	Position q;
	q = (Position)malloc(sizeof(Lista));

	q->rijec = (char*)malloc(BUFFER * sizeof(char));
	if (q->rijec == NULL)
		return GRESKAALOKACIJE;
	strcpy(q->rijec, rijec);
	while (p->next != NULL && strcmp(p->next->rijec, rijec) > 0)
		p = p->next;
	q->next = p->next;
	p->next = q;
	return 0;
}
void IspisListe(Position p)
{
	while (p != NULL)
	{
		printf("%s\n", p->rijec);
		p = p->next;
	}

}
int CitajIzDrugeDat(Position p)
{
	char* filename = NULL;
	FILE* fp = NULL;
	char* rijec = NULL;
	int succ = 0;

	filename = (char*)malloc(BUFFER * sizeof(char));
	if (filename == NULL)
		return GRESKAALOKACIJE;

	rijec = (char*)malloc(BUFFER * sizeof(char));
	if (rijec == NULL)
		return GRESKAALOKACIJE;

	printf("Unesite ime druge datoteke:\n");
	scanf("%s", filename);
	strcat(filename, ".txt");

	fp = fopen(filename, "r");
	if (fp == NULL)
		return NEPOSTOJI;

	while (!feof(fp))
	{
		fscanf(fp, "%s ", rijec);
		succ=Ispisi2(p->next, rijec);
	}
	fclose(fp);
	return 0;


}
int Ispisi2(Position p, char* rijec)
{
	while (p->next != NULL && strcmp(p->next->rijec, rijec) != 0)
		p = p->next;
	if (p->next == NULL)
		return NULL;
	else
		printf("%s\n", p->next->rijec);

}
